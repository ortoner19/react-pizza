–í —Ü—å–æ–º—É –≤—ñ–¥–µ–æ –¥–æ —Ñ–µ—Ç—á –∑–∞–ø–∏—Ç–∞ –∑ –∞–∫—Å—ñ–æ—Å–æ–º —â–µ –¥–æ–±–∞–≤–∏–ª–∏ async await
–ê–≤—Ç–æ—Ä —Ä–æ–∑–∫–∞–∑—É–≤–∞–≤ —à–æ –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥—ñ —ñ –∞–ª—î—Ä—Ç–∏ –≤–∏–ø–æ–ª–Ω—è—é—Ç—å—Å—è —Å—ñ–Ω—Ö—Ä–æ–Ω–Ω–æ, –æ–¥–∏–Ω –ø—ñ—Å–ª—è –æ–¥–Ω–æ–≥–æ, –∞ –∞–∫—Å—ñ–æ—Å —á—ñ —Ñ–µ—Ç—á (–∞ –∞–∫—Å—ñ–æ—Å —ñ —Ä–æ–±–∏—Ç—å —á–µ—Ä–µ–∑ —Ñ–µ—Ç—á), —Ä–æ–±–∏—Ç—å –ê–°–Ü–ù–•–†–û–ù–ù–ò–ô –∑–∞–ø–∏—Ç.
–¢–æ–±—Ç–æ —Å–ø–æ—á–∞—Ç–∫—É –≤–∏–ø–æ–≤–Ω–∏–ª–∏—Å—è –± –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥—ñ, –¥–∞–ª—ñ –∞–ª—î—Ä—Ç–∏, –∞ —Ñ–µ—Ç—á –≤ –±—É–¥—å-—è–∫—ñ–π –º–æ–º–µ–Ω—Ç, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥.
–†–æ–¥—ñ—Ç—î–ª—å—Å—å–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—è async –º–∞—î –±—É—Ç–∏. async  –º–æ–∂–µ –±—É—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞, –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥.
–°–ø–æ—á–∞—Ç–∫—É –≤ –≤—ñ–¥–æ—Å—ñ –∞–≤—Ç–æ—Ä –ø–æ–∫–∞–∑–∞–≤ —è–∫ –∑–∞–º—ñ—Å—Ç—å then –º–∏ —Ç–µ–ø–µ—Ä —é–∑–∞—î–º await –æ–¥–∏–Ω —Ä–∞–∑.

const getPizzas = async () => {

    const sortBy = sort.sortProperty.replace('-', '');
    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';
    const category = categoryId > 0 ? `category=${categoryId}` : ''
    const search = searchValue ? `&search=${searchValue}` : ''


// —Ç—É—Ç –±—É–≤ axios –∑–∞–ø–∏—Ç, –π–æ–≥–æ –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –≤ —Å–ª–∞–π—Å, —Ç–∞–º await –≤—ñ—à–∞—î—Ç—å—Å—è –Ω–∞ fetchPizzas

dispatch(fetchPizzas({
      sortBy,  // –≤–æ–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –ø–µ—Ä–µ–¥ —Ü–∏–º
      order,
      category,
      search,
      currentPage,
    }),
    );

    window.scrollTo(0, 0);
  }

==
–©–µ —Ä–æ–∑–≥–ª—è–¥–∞–ª–∏ –¢—Ä–∞–π –ö–µ—Ç—á, –ø–æ—Ç—ñ–º —É–±—Ä–∞–ª–∏

    // try {  // –ø–∏—Ç–∞–π—Å—è —Ä–æ–±–∏—Ç—å —Ü–µ, —è–∫—â–æ –Ω–µ –≤–∏–π–¥–µ —Ç–æ –∫–µ—Ç—á, –∞ finally  –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É
    // const {data} = await axios.get(`https://63f1fde1aab7d09125ff6f7c.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);

    // } catch (error) {
    //   // setIsLoading(false);
    //   alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∏—Ü—Ü')
    // } 
    // finally {
    //   setIsLoading(false);
    // }
==

–°–æ–∑–¥–∞–ª–∏ –Ω–æ–≤–∏–π —Å–ª–∞–π—Å, —Ñ–∞–π–ª pizzaSlice.js

import axios from 'axios';
import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";

–û—Ü–µ –Ω–∏–∂–µ —Å–æ–∑–¥–∞–π –∞—Å—ñ–Ω—Ö—Ä–æ–Ω–Ω–∏–π –µ–∫—à–µ–Ω, –∫–æ–ª–∏ –≤—ñ–Ω –≤–∏–ø–æ–≤–Ω–∏—Ç—å—Å—è –≤–µ—Ä–Ω–∏ –º–µ–Ω—ñ –æ—Ç–≤—î—Ç —ñ –æ—Ü–µ –¥—î–π—Å—Ç–≤—ñ—î –º–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ extraReducers –Ω–∏–∂–µ.
–í extraReducers  –æ–±—Ä–∞–±–∞—Ç—É—î—Ç—å—Å—è –Ω–µ –ª–æ–≥—ñ–∫–∞, –∞ –∞—Å—ñ–Ω—Ö—Ä–æ–Ω–Ω—ñ –µ–∫—à–µ–Ω–∏. –¢–∞–∫–æ–∂ extraReducers   –∑–∞–º—ñ–Ω–∏–ª–∏ try catch –≤ Home
export const fetchPizzas = createAsyncThunk(   // fetchPizzas  –±—É–ª–æ –≤ Home, –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ —Å—é–¥–∏
  'pizza/fetchPizzasStatus',                   // createAsyncThunk –±–µ—Ä–µ –ø—Ä–µ—Ñ—ñ–∫—Å. pizza —Ü–µ –Ω–∞–∑–≤–∞ –∑—ñ —Å—Ç–µ–π—Ç—É –Ω–∏–∂–µ
  async (params) => {
    const { sortBy, order, category, search, currentPage } = params;  // –≤–∏—Ç–∞—â—ñ–ª–∏ –∑ Home
    const {data} = await axios.get(`https://c63f1fde1aab7d09125ff6f7c.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);
    return data;
  }
)

// —Å–µ—Ç–°—Ç–µ–π—Ç –∑ Home isLoading —É–±—Ä–∞–ª–∏, —ñ —Ç–µ–ø–µ—Ä —Ç—É—Ç —Ü—è –ª–æ–≥—ñ–∫–∞ –≤–∫–ª—é—á–∞—î—Ç—å—Å—è
const initialState = {
  items: [],
  status: 'loading', // loading | success | error   // –æ—Ü–µ–π —Å—Ç–∞—Ç—É—Å –Ω–∏–∂–µ —á–µ—Ä–µ–∑ –µ–∫—Å—Ç—Ä–∞—Ä–µ–¥—é—Å–µ—Ä–∏ –º—ñ–Ω—è—î—Ç—å—Å—è, —ñ–∑–Ω–∞—á–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∫–∞.. —Ç—ñ–ø–∞ —Å–∫—î–ª—î—Ç–æ–Ω
};

const pizzaSlice = createSlice({
  name: "pizza",
  initialState,
  reducers: {
    setItems(state, action) {
            state.items = action.payload;
        },
      },
      extraReducers: {
        [fetchPizzas.pending] : (state) => {
          // console.log('–ò–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞');
          state.status = 'loading';
          state.items = [];
        },
        [fetchPizzas.fulfilled] : (state, action) => {
          // console.log(state, '–í—Å–µ –û–ö');          // fulfilled —Ü–µ —è–∫—â–æ —É—Å–ø—ã—à–Ω–æ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è, —Ç–æ —Ä–æ–±–∏ —â–æ—Å—å
          state.items = action.payload;
          state.status = 'success';
        },
        [fetchPizzas.rejected] : (state, action) => {
          // console.log('–ë—ã–ª–∞ –æ—à–∏–±–∫–∞');          // —Ç—ñ–ø–∞ —è–∫—â–æ –±—É–ª–∞ –æ—à–∏–±–∫–∞ —Ç–æ –ø—É—Å—Ç–∏–π –º–∞—Å—ñ–≤
          state.status = 'error';
          state.items = [];
        },
      }
    })


export const { setItems } = pizzaSlice.actions;

export default pizzaSlice.reducer;


–î–æ–±–∞–≤–∏–ª–∏ –≤ store –Ω–æ–≤–∏–π —Ä–µ–¥—é—Å–µ—Ä

import { configureStore } from "@reduxjs/toolkit";
import filter from "./slices/filterSlice";
import cart from "./slices/cartSlice";
import pizza from "./slices/pizzaSlice";

export const store = configureStore({
  reducer: {
    filter,
    cart,
    pizza,
  },
});


–í Home.jsx
import { fetchPizzas } from '../redux/slices/pizzaSlice';

  const { items, status } = useSelector((state) => state.pizza)
—É–±—Ä–∞–ª–∏ —Ç—É—Ç –ª–æ–∫–∞–ª—å–Ω—ñ —Å—Ç–µ–π—Ç–∏, –±–æ –≤–æ–Ω–æ –≤ —Ä—î–¥–∞–∫—Å—ñ —Ç–µ–ø–µ—Ä
  // const [items, setItems] = React.useState([]);
  // const [isLoading, setIsLoading] = React.useState(true)


        {
          status == 'error' ? (<div className='content__error-info'>
            <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ <span>üòï</span></h2>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ü—Ü—ã, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é <br />
              –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
            </p>
          </div>) : (<div className="content__items"> {status == 'loading'
            ? skeletons
            : pizzas} </div>
          )}